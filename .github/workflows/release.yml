name: Release

on:
  workflow_run:
    workflows:
      - Test
    types: [completed]
    branches:
      - master
      - release/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  semantic-release:
    name: ðŸ¤– Semantic release
    runs-on: ubuntu-latest
    needs: [test-suite]
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-release')"
    # if: ${{ github.ref_name == 'master' && github.event_name == 'push' }}
    outputs:
      release: ${{ steps.tag_release.outputs.release }}
      version: ${{ steps.tag_release.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install semantic-release
        run: |
          npm i npx
          npm i semantic-release/changelog
      - name: Tag release
        id: tag_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release | tee semantic-release.log
          if [[ `git tag --points-at HEAD` == "" ]]; then
            echo "release=False" >> $GITHUB_OUTPUT
          else
            echo "release=True" >> $GITHUB_OUTPUT
            awk '/Published release/ { printf("version=v%s\n",$8) }' semantic-release.log >> $GITHUB_OUTPUT
          fi

  win-build:
    name: ðŸ’» win64 build
    runs-on: windows-latest
    needs: [semantic-release]
    if: ${{ needs.semantic-release.outputs.release == 'True' }}
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1
      - name: choco install deps
        uses: crazy-max/ghaction-chocolatey@v2
        with:
          args: install libopencv-dev
      - name: Build using nmake
        run: |
          mkdir build && cd build
          cmake -G "NMake Makefiles" ../
          nmake
      - name: Upload win64 filter
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-filter
          path: build/src/filter/**/*.dll
      - name: Upload win64 mixer2
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-mixer2
          path: build/src/mixer2/**/*.dll
      - name: Upload win64 mixer3
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-mixer3
          path: build/src/mixer3/**/*.dll
      - name: Upload win64 generator
        uses: actions/upload-artifact@v3
        with:
          name: release-win64-generator
          path: build/src/generator/**/*.dll

  osx-build:
    name: ðŸ’» osx build
    runs-on: macos-latest
    needs: [semantic-release]
    if: ${{ needs.semantic-release.outputs.release == 'True' }}
    steps:
      - uses: actions/checkout@v3
      - name: Update Homebrew
        run: |
          brew update --preinstall
      - name: Install Homebrew dependencies
        run: |
          env HOMEBREW_NO_AUTO_UPDATE=1 brew install cmake ninja
      - name: Build using ninja
        run: |
          mkdir build && cd build
          cmake -G "Ninja" ../
          ninja
      - name: Upload osx filter
        uses: actions/upload-artifact@v3
        with:
          name: release-osx-filter
          path: build/src/filter/**/*.so
      - name: Upload osx mixer2
        uses: actions/upload-artifact@v3
        with:
          name: release-osx-mixer2
          path: build/src/mixer2/**/*.so
      - name: Upload osx mixer3
        uses: actions/upload-artifact@v3
        with:
          name: release-osx-mixer3
          path: build/src/mixer3/**/*.so
      - name: Upload osx generator
        uses: actions/upload-artifact@v3
        with:
          name: release-osx-generator
          path: build/src/generator/**/*.so

  draft-binary-release:
    name: ðŸ“¦ Pack release
    needs: [semantic-release, msvc-build]
    # if: ${{ needs.semantic-release.outputs.release == 'True' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: download binary artifacts
        uses: actions/download-artifact@v3
        with:
          path: |
            frei0r-bin
      - name: create compressed archives
        run: |
          cd frei0r-bin
          dst=frei0r-filters_${{ needs.semantic-release.outputs.version }}_win64
          mkdir $dst && find release-win64-filters -type f -name '*.dll' -exec cp {} $dst \;
          cp ../README.md ../COPYING ../ChangeLog ../AUTHORS $dst
          echo "${{ needs.semantic-release.outputs.version }}" > $dst/VERSION
          zip -r -9 $dst.zip $dst
          dst=frei0r-mixers_${{ needs.semantic-release.outputs.version }}_win64
          mkdir $dst && find release-win64-mixers -type f -name '*.dll' -exec cp {} $dst \;
          cp ../README.md ../COPYING ../ChangeLog ../AUTHORS $dst
          echo "${{ needs.semantic-release.outputs.version }}" > $dst/VERSION
          zip -r -9 $dst.zip $dst
          dst=frei0r-generators_${{ needs.semantic-release.outputs.version }}_win64
          mkdir $dst && find release-win64-generators -type f -name '*.dll' -exec cp {} $dst \;
          cp ../README.md ../COPYING ../ChangeLog ../AUTHORS $dst
          echo "${{ needs.semantic-release.outputs.version }}" > $dst/VERSION
          zip -r -9 $dst.zip $dst
          sha256sum *.zip > SHA256SUMS.txt
      - name: show directory structure
        run: tree -dL 3
      - name: release all archives
        uses: softprops/action-gh-release@v1
        with:
          files: |
            frei0r-bin/*.zip
            frei0r-bin/SHA256SUMS.txt
            frei0r-bin/release-plugin-analysis/*.json
          tag_name: ${{ needs.semantic-release.outputs.version }}
          draft: true
          prerelease: false
          fail_on_unmatched_files: true
          generate_release_notes: true


